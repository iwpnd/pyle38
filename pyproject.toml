[tool.poetry]
name = "pyle38"
version = "0.9.1"
description = "Async python client for Tile38"
authors = ["Benjamin Ramser <ahoi@iwpnd.pw>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/iwpnd/pyle38"
repository = "https://github.com/iwpnd/pyle38"
keywords = ["tile38", "async", "client"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Topic :: Database :: Front-Ends",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Typing :: Typed"]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^1.8.1"
redis = "^4.5.3"

[tool.poetry.group.dev.dependencies]
types-redis = "^4.3.21.5"
pytest = "^7.2.2"
pre-commit = ">=2.20,<4.0"
black = "^23.1.0"
pytest-asyncio = ">=0.20.2,<0.22.0"
gitlint = "^0.19.0"
poethepoet = ">=0.16.4,<0.20.0"
isort = "^5.10.1"
pytest-cov = "^4.0.0"
mypy = ">=0.991,<1.3"
python-semantic-release = "^7.32.1"
ruff = ">=0.0.254,<0.0.262"

[tool.semantic_release]
version_variable = [
    "pyle38/__init__.py:__version__",
    "pyproject.toml:version"
]
commit_subject = "ci: release v{version}"
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
version_source = "tag"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[mypy]
python_version = 3.10
ignore_missing_imports = true

[tool.ruff]
line-length = 88

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.poe.tasks]
test       = "poetry run pytest -vv --asyncio-mode=auto -s tests/"
test-cov   = "poetry run pytest -vv --asyncio-mode=auto -s --cov=pyle38 tests/ --cov-report xml:/home/runner/coverage.xml"
mypy       = "poetry run mypy --ignore-missing-imports --config-file pyproject.toml"
lint       = "ruff ."
up         = "docker-compose up"
down       = "docker-compose down"
publish    = "poetry run semantic-release publish"
